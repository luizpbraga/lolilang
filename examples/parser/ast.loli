pub var type = enum {
    # statements
    program
    let
    block
    exp_stmt
    # expression 
    void
    bool
    integer
    float
    identifier
    string
    infix
    ifelse
}

pub var Program = struct {
    ty = type.program
    statements #[]stmt 
}

pub var Let = struct {
    ty = type.let
    name
    value
}

pub var Block = struct {
    ty = type.block
    statements
}

pub var ExpStmt = struct {
    ty = type.exp_stmt
    exp
}

pub var Bool = struct {
    ty = type.bool
    value
}

pub var Integer = struct {
    ty = type.integer
    value
}

pub var Float = struct {
    ty = type.float
    value
}

pub var Identifier = struct {
    ty = type.identifier
    value
}

pub var String = struct {
    ty = type.string
    value
}

pub var Infix = struct {
    ty = type.infix 
    op
    left
    right
}

pub var If = struct {
    ty = type.ifelse
    condition
    consequence
    alternative
}

