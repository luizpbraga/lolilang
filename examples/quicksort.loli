fn quickSort(arr) {
    len := arr.len

    if len <= 1: return arr 

    pivot := arr[len/2]

    left := []
    for x in arr: if x < pivot: @append(left, x)

    middle := []
    for x in arr: if x == pivot: @append(middle, x)

    right := []
    for x in arr: if x > pivot: @append(right, x)

    return quickSort(left) + middle + quickSort(right)
}

fn testIntArray() {
    arr := [3, 6, 8, 10, 1, 2, 1]
    exp := [1, 1, 2, 3, 6, 8, 10]

    sorted_arr := quickSort(arr)
    @assert(sorted_arr == exp) 
}

fn testString() {
    arr := "3210"
    exp := ['0', '1', '2', '3']
    sorted_arr := quickSort(arr)
    @assert(sorted_arr == exp) 
}

testIntArray()
testString()
