fn quickSort(arr) {
    len := arr.len
    if len <= 1: return arr 
    
    pivot := arr[len/2]
    left := []
    right := []
    middle := []

    for x in arr: match {
      x < pivot => { @append(left, x) }
      x > pivot => { @append(right, x) }
      x == pivot => { @append(middle, x) }
    }

    return quickSort(left) + middle + quickSort(right)
}

fn testIntArray() {
    arr := [3, 6, 8, 10, 1, 2, 1]
    exp := [1, 1, 2, 3, 6, 8, 10]

    sorted_arr := quickSort(arr)
    @assert(sorted_arr == exp) 
}

fn testString() {
    arr := "3210"
    exp := ['0', '1', '2', '3']
    sorted_arr := quickSort(arr)
    @assert(sorted_arr == exp) 
}

testIntArray()
testString()
